package ca.ubc.cs.cpsc210.mindthegap.parsers;

import ca.ubc.cs.cpsc210.mindthegap.model.*;
import ca.ubc.cs.cpsc210.mindthegap.parsers.exception.TfLLineDataMissingException;
import ca.ubc.cs.cpsc210.mindthegap.util.LatLon;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * A parser for the data returned by TFL line route query
 */
public class TfLLineParser extends TfLAbstractParser {

    /**
     * Parse line from JSON response produced by TfL.  No stations added to line if TfLLineDataMissingException
     * is thrown.
     *
     * @param lmd              line meta-data
     * @return                 line parsed from TfL data
     * @throws JSONException   when JSON data does not have expected format
     * @throws TfLLineDataMissingException when
     * <ul>
     *  <li> JSON data is missing lineName, lineId or stopPointSequences elements </li>
     *  <li> for a given sequence: </li>
     *    <ul>
     *      <li> the stopPoint array is missing </li>
     *      <li> all station elements are missing one of name, lat, lon or stationId elements </li>
     *    </ul>
     * </ul>
     */
    public static Line parseLine(LineResourceData lmd, String jsonResponse)
            throws JSONException, TfLLineDataMissingException {
        JSONObject jsonObject=new JSONObject(jsonResponse);
        String id=jsonObject.getString("lineId");
        String name=jsonObject.getString("lineName");
        Line line =new Line(lmd,id, name);
        JSONArray lineStrings=jsonObject.getJSONArray("lineStrings");
        for (int i=0;i<lineStrings.length();i++){
            String linestring =lineStrings.getString(i);
            Branch b=new Branch(linestring);
            line.addBranch(b);
        }

        String stations=jsonObject.getString("stations");
        JSONArray stationsJSONArray=new JSONArray(stations);
        for(int i = 0; i < stationsJSONArray.length(); i++) {
            parseStaion(station, stationsJSONArray.getJSONObject(i));
        }

        return line;
    }

    public void parseStaion(Station station,JSONObject stationJSONObject) throws JSONException {
        //name, lat, lon and stationId
        Double lat=stationJSONObject.getDouble("lat");
        Double lon=stationJSONObject.getDouble("lon");
        LatLon latlon=new LatLon(lat,lon);
        String stationId=stationJSONObject.getString("stationId");
        String name=TfLAbstractParser.parseName(stationJSONObject.getString("name"));
        station=new Station(stationId,name,latlon);
    }


}
